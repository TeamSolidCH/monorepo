name: ðŸš€ Publish calendarbot
on:
  pull_request:
    # paths: UNCOMMENT WHEN IT IS WORKING
    #   - './crates/calendarbot'
    #   - './Cargo.toml'
    #   - './Cargo.lock'
    #   - './.moon/'
    #   - './flake.nix'
    #   - './flake.lock'
  push:
    tags:
      - calendarbot/v**

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

env:
  IMAGE_NAME: calendarbot
  REPOSITORY_NAME: teamsolidch

jobs:
  get-version:
    name: Get version
    runs-on: ubuntu-24.04
    outputs: 
      version: ${{ steps.version.outputs.VERSION }}
    steps:
      -
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0
      - 
        name: Get version
        id: version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          LAST_TAG: ${{ steps.previoustag.outputs.tag }}
          REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: bash .github/scripts/get-version.sh
  build-deploy:
    name: Build & Publish
    needs: [get-version]
    runs-on: ubuntu-24.04
    steps:
      -
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        uses: cachix/install-nix-action@v26
      -
        uses: cachix/cachix-action@v14
        with:
          name: yoyozbi-ci-cache
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - 
        name: Build env
        run: 'nix develop --impure --accept-flake-config --command bash -c "echo hello" #.'
      -
        name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Print version
        run: echo "${{ needs.get-version.outputs.version }}"


